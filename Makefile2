 
CC = gcc
CFLAGS = -O0

RVCC = riscv64-unknown-elf-gcc
RVDUMP = riscv64-unknown-elf-objdump
RVCFLAGS = -march=rv32g -mabi=ilp32 -nostdlib -Wl,--section-start=.text=0x0

BIN = elf32dump vm32

.PHONY: dump_test vm_test objdump_test # 強制要執行的，放在 .PHONY 裡面

all: elf32dump vm32 rv32

elf32dump: elf32dump.c lib.c dasm.c elf32lib.c
	$(CC) $(CFLAGS) -o $@ $^

vm32: vm32.c vm.c riscv.c lib.c dasm.c
	$(CC) $(CFLAGS) -o $@ $^

rv32: test/test1.c test/test2.s
	$(RVCC) $(RVCFLAGS) -S test/test1.c -o test/test1_rv32.s
	$(RVCC) $(RVCFLAGS) test/test1.c -o test/test1_rv32.o
	$(RVCC) $(RVCFLAGS) -c test/test2.s -o test/test2_rv32.o

dump_test:
	./elf32dump test/test1_rv32.o

objdump_test:
	$(RVDUMP) -d test/test1_rv32.o

vm_test:
	./vm32 test/test1_rv32.o
	./vm32 test/test2_rv32.o

clean:
	$(RM) *.o $(BIN) test/*.o

.PRECIOUS: %.o tests/%.class tests/%-expected.out tests/%-actual.out tests/%-result.out

indent:
	clang-format -i jvm.c
	cloc jvm.c
